---
# yamllint disable rule:line-length
name: Actions Octopus
description: |
  ** Input required if .octopus/workflow/octopus.yaml does not exists.
  See [Usage with octopus.yaml](#with-octopusyaml) section.
  *** Either `charts_dir_path` or `terraform_dir_path` is required.

  ## Usage

  ### Without Octopus.yaml

  To run without using Octopus configuration as code,
  include space_name and project_name inputs within your github workflow.

  ```yaml
  - name: Lazy Action Octopus
    uses: variant-inc/actions-octopus@v2
    with:
      default_branch: ${{ env.MASTER_BRANCH }}
      deploy_scripts_path: deploy
      project_name: ${{ env.PROJECT_NAME }}
      version: ${{ steps.lazy-setup.outputs.image_version }}
      space_name: ${{ env.OCTOPUS_SPACE_NAME }}
      charts_dir_path: helm/Variant.Api
      is_infrastructure: false
  ```

  ### With Octopus.yaml

  [octopus-yaml.md](docs/octopus-yaml.md)

  ## Upgrade to v2

  v2 has the ability to let our internal `replicator`
  application to know whether a specific repository has been deployed in an environment

  1. Change uses to `variant-inc/actions-octopus@v2`
  2. Add either `charts_dir_path` or `terraform_dir_path` variable
  3. If the project has dependencies used by other project,
    then set `is_infrastructure` to `true`.
inputs:
  default_branch:
    description: Default/Main Branch Name
    required: false
    default: master
  deploy_scripts_path:
    description: >
      Path to the deploy scripts which is packaged
      and pushed to Octopus. This folder will contains the
      necessary scripts/helm charts/other misc to run the deployments
    required: false
    default: .
  version:
    description: >
      Semantic Version that is used for determining
      the package and release version
    required: true
  space_name:
    description: >
      Name of the Space in Octopus. Usually, this will be Engineering,
      Mobile, DevOps, etc.
    required: false
  project_name:
    description: Name of the project name in Octopus
    required: false
  feature_channel_branches:
    description: >
      Regex of the branches that has to deployed to dev.
    required: false
    default: .*
runs:
  using: composite
  steps:
    - name: Install Octopus CLI üêô
      uses: OctopusDeploy/install-octopus-cli-action@v1
      with:
        version: '*'
    - name: Setup Octopus Project & Release
      shell: pwsh
      run: ${{ github.action_path }}/start.ps1
      env:
        DEFAULT_BRANCH: ${{ inputs.default_branch }}
        DEPLOY_SCRIPTS_PATH: ${{ inputs.deploy_scripts_path }}
        PROJECT_NAME: ${{ inputs.project_name }}
        VERSION: ${{ inputs.version }}
        SPACE_NAME: ${{ inputs.space_name }}
        FEATURE_CHANNEL_BRANCHES: ${{ inputs.feature_channel_branches }}
        ACTION_PATH: ${{ github.action_path }}
