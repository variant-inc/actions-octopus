---
# yamllint disable rule:line-length
name: Actions Octopus
description: |
inputs:
  default_branch:
    description: Default/Main Branch Name
    required: false
    default: master
  deploy_scripts_path:
    description: >
      Path to the deploy scripts which is packaged
      and pushed to Octopus. This folder will contains the
      necessary scripts/helm charts/other misc to run the deployments
    required: false
    default: .
  version:
    description: >
      Semantic Version that is used for determining
      the package and release version
    required: true
  space_name:
    description: >
      Name of the Space in Octopus. Usually, this will be Engineering,
      Mobile, DevOps, etc.
    required: false
  project_name:
    description: Name of the project name in Octopus
    required: false
  feature_channel_branches:
    description: >
      Regex of the branches that has to deployed to dev.
    required: false
    default: .*
runs:
  using: composite
  steps:
    - name: install_mono
      shell: bash
      run: |
        sudo apt install ca-certificates gnupg
        sudo gpg --homedir /tmp --no-default-keyring --keyring /usr/share/keyrings/mono-official-archive-keyring.gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF
        echo "deb [signed-by=/usr/share/keyrings/mono-official-archive-keyring.gpg] https://download.mono-project.com/repo/ubuntu stable-focal main" | sudo tee /etc/apt/sources.list.d/mono-official-stable.list
        sudo apt update
        sudo apt install mono-complete
    - name: install_nuget
      uses: nuget/setup-nuget@v2
    - name: Install Octopus CLI üêô
      uses: OctopusDeploy/install-octopus-cli-action@v3
      with:
        version: '*'
    - name: Push build information to Octopus Deploy üêô
      uses: OctopusDeploy/push-build-information-action@v3
      with:
        packages: |
          ${{ inputs.project_name }}
        version: ${{ env.OCTOPUS_RELEASE_VERSION }}
        overwrite_mode: OverwriteExisting
        space: ${{ inputs.space_name }}
    - name: Setup Octopus Project & Release
      shell: pwsh
      run: ${{ github.action_path }}/start.ps1
      env:
        DEFAULT_BRANCH: ${{ inputs.default_branch }}
        DEPLOY_SCRIPTS_PATH: ${{ inputs.deploy_scripts_path }}
        PROJECT_NAME: ${{ inputs.project_name }}
        VERSION: ${{ inputs.version }}
        SPACE_NAME: ${{ inputs.space_name }}
        FEATURE_CHANNEL_BRANCHES: ${{ inputs.feature_channel_branches }}
        ACTION_PATH: ${{ github.action_path }}
    - name: Create Release Action
      uses: variant-inc/actions-collection/create-release-tag@v2
