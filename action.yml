---
# yamllint disable rule:line-length
name: Lazy Octopus Action
description: |
  Github Action to create release in Octopus.

  ## Usage

  Please reference
  [DX Workflow](https://backstage.apps.ops-drivevariant.com/docs/default/Component/dx-docs)
  documentation as actions-octopus v3 should only be used in tandem with DX Workflow.
  DX Workflow defines and deploys both infrastructure and applications.

  1. Create a deployment spec in `.variant/deploy`. Reference the
    [DX Workflow Documentation](https://backstage.apps.ops-drivevariant.com/docs/default/Component/dx-docs/Getting-Started/Tutorials/)
    and these [examples](https://backstage.apps.ops-drivevariant.com/docs/default/Component/dx-docs/dx-requirements/#more-examples)
    for more information.

  2. Add a build step to your GitHub actions workflow yaml. More examples
    [here](https://backstage.apps.ops-drivevariant.com/docs/default/Component/dx-docs/Getting-Started/Github/Github-Actions/#examples-of-github-actions-that-the-dx-workflow-supports).

  ```yaml
  - name: Lazy Action Octopus
    uses: variant-inc/actions-octopus@v3
  ```

  ## Migrating to v3

  v3 runs CI using cake. Currently only repositories that do not deploy
  infrastructure can migrate to v3.

  1. Change uses new action version v3: `variant-inc/actions-octopus@v3`
  2. Add a Variant Deploy Yaml File following the usage above.
    Note that only certain versions of charts in lazy-helm-charts are supported
    and may require you to update and fix breaking changes with
    the helm release.
inputs:
  tf_apps_version:
    description: |
      terraform-variant-apps package version
      Defaults to latest release version. Can be overriden by exact version or specifying range in [NuGet notation](https://learn.microsoft.com/en-us/nuget/concepts/package-versioning).
    required: false
    default: '[*,2.1)'
  mage_runner_version:
    description: |
      mage-runner package version
      Defaults to latest release version. Can be overriden by exact version or specifying range in [NuGet notation](https://learn.microsoft.com/en-us/nuget/concepts/package-versioning).
    required: false
    default: '[*,1.0)'
  deploy_yaml_dir:
    description: |
      Defaults to `.variant/deploy` for backwards compatibility.
      This is the place where the YAML files for DX are located.
    required: false
    default: .variant/deploy
runs:
  using: composite
  steps:
    - name: Setup dotnet
      uses: actions/setup-dotnet@v4
    - name: Set Default Branch
      shell: bash
      run: |
        if [ "$GitVersion_PreReleaseLabel" == "" ]; then
          echo "INPUT_DEFAULT_BRANCH=$GitVersion_BranchName" >>"$GITHUB_ENV"
        fi
        echo "$HOME/.local/bin" >> $GITHUB_PATH
    - name: Setup Octopus Project & Release
      shell: pwsh
      run: ${{ github.action_path }}/tasks.ps1
      env:
        TF_APPS_VERSION: ${{ inputs.tf_apps_version }}
        MAGE_RUNNER_VERSION: ${{ inputs.mage_runner_version }}
        OCTOPUS_CLI_API_KEY: ${{ env.OCTOPUS_CLI_API_KEY }}
        OCTOPUS_CLI_SERVER: ${{ env.OCTOPUS_CLI_SERVER }}
        DEPLOY_YAML_DIR: ${{ inputs.deploy_yaml_dir }}
    - name: Create Release Action
      uses: variant-inc/actions-collection/create-release-tag@v2
